{"version":3,"sources":["layouts/Nav.jsx","layouts/Layout.jsx","screens/Login.jsx","screens/Register.jsx","services/api-config.js","services/posts.js","services/characters.js","components/PostCards.jsx","screens/Posts.jsx","screens/PostCreate.jsx","screens/PostEdit.jsx","containers/MainContainer.jsx","services/auth.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","props","currentUser","handleLogout","className","name","to","onClick","Layout","children","Login","useState","password","formData","setFormData","handleLogin","handleChange","e","target","value","prevState","onSubmit","preventDefault","type","onChange","Register","email","handleRegister","api","axios","create","baseURL","getAllPosts","a","get","resp","data","postPost","postData","charID","post","putPost","id","put","destroyPost","delete","upvotePost","downvotePost","getAllCharacters","PostCards","posts","handleDelete","handleUpvote","handleDownvote","voted","setSortType","map","src","character","img_url","alt","includes","disabled","score","content","user","user_id","Posts","PostCreate","handleCreate","characters","character_id","maxLength","placeholder","defaultValue","PostEdit","useParams","handleUpdate","useEffect","length","postCard","find","Number","prefillFormData","MainContainer","setPosts","setCharacters","sortType","setVoted","history","useHistory","fetchPosts","sortProperty","date","sorted","sort","b","sortArray","fetchCharacters","newPost","push","filter","updatedPost","exact","path","loginUser","loginData","authentication","localStorage","setItem","token","defaults","headers","common","authorization","registerUser","registerData","verifyUser","getItem","App","setCurrentUser","userData","handleVerify","removeItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.775b7491.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\nimport \"./Nav.css\";\n\nexport default function Nav(props) {\n  const { currentUser, handleLogout } = props;\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"grid-container\">\n        <div className=\"title-container\">\n          <div className=\"title\">A Twitter Clone</div>\n          <div className=\"sub-title\">\n            Except you can only post as Sopranos Characters\n          </div>\n        </div>\n        <div>\n          {currentUser ? (\n            <>\n              <div className=\"welcome\">Hello, {currentUser.name}</div>\n              <>\n                <div className=\"nav-controls\">\n                  <Link to=\"/\">\n                    <button className=\"nav-buttons\">Home</button>\n                  </Link>\n                  <Link to=\"/posts/new\">\n                    <button className=\"nav-buttons\">New Post</button>\n                  </Link>\n                  <button className=\"nav-buttons\" onClick={handleLogout}>\n                    Logout\n                  </button>\n                </div>\n              </>\n            </>\n          ) : (\n              <Link className=\"nav-controls\" to=\"/login\">\n                <button className=\"nav-buttons\">\n                  Login / Register\n                  </button>\n            </Link>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Nav from \"../layouts/Nav\";\n\nexport default function Layout(props) {\n  const { currentUser, handleLogout } = props;\n  return (\n    <div>\n      <Nav currentUser={currentUser} handleLogout={handleLogout} />\n      {props.children}\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\nexport default function Login(props) {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    password: \"\",\n  });\n  const { name, password } = formData;\n  const { handleLogin } = props;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className='signup-container'>\n    <form className='signup-form'\n      onSubmit={(e) => {\n        e.preventDefault();\n        handleLogin(formData);\n      }}\n    >\n      <label>\n        Username:\n        <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n      </label>\n      <br />\n      <label>\n        Password:\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n      </label>\n        <br />\n        <div>\n      <Link to=\"/register\">\n        <button className=\"submit-button\">Register</button>\n      </Link>\n          <button className=\"submit-button\">Submit</button>\n          </div>\n      </form>\n      </div>\n  );\n}\n","import { useState } from 'react';\nimport \"./Register.css\";\n\n\nexport default function Register(props) {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: ''\n  })\n  const { name, email, password } = formData;\n  const { handleRegister } = props;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }))\n  }\n\n  return (\n    <div className='signup-container'>\n    <form className='signup-form' onSubmit={(e)=>{\n      e.preventDefault();\n      handleRegister(formData);\n    }}>\n      <label>\n        Username:\n        <input\n          type='text'\n          name='name'\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <label>\n        Email:\n        <input\n          type='text'\n          name='email'\n          value={email}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <label>\n        Password:\n        <input\n          type='password'\n          name='password'\n          value={password}\n          onChange={handleChange}\n        />\n      </label>\n      <br />\n      <button className=\"submit-button\">Submit</button>\n      </form>\n      </div>\n  )\n}\n","import axios from 'axios';\n\nconst baseUrl = process.env.NODE_ENV === 'production' ? 'https://sopranos-twitter-backend.herokuapp.com/' : 'http://localhost:3000';\n\nconst api = axios.create({\n  baseURL: baseUrl\n});\n\nexport default api;","import api from './api-config';\n\nexport const getAllPosts = async () => {\n  const resp = await api.get('/posts');\n  return resp.data;\n}\n\nexport const getAllPostsFromCharacter = async (charID) => {\n  const resp = await api.get(`/characters/${charID}/posts/`);\n  return resp.data;\n}\n\nexport const getOnePost = async (id) => {\n  const resp = await api.get(`/posts/${id}`);\n  return resp.data;\n}\n\nexport const postPost = async (postData, charID) => {\n  const resp = await api.post(`/characters/${charID}/posts/`, { post: postData });\n  return resp.data;\n}\n\nexport const putPost = async (id, postData) => {\n  const resp = await api.put(`/posts/${id}`, { post: postData });\n  return resp.data;\n}\n\nexport const destroyPost = async (id) => {\n  const resp = await api.delete(`/posts/${id}`);\n  return resp;\n}\n\nexport const upvotePost = async (id) => {\n  const resp = await api.put(`/${id}/upvote`);\n  return resp.data;\n}\n\nexport const downvotePost = async (id) => {\n  const resp = await api.put(`/${id}/downvote`);\n  return resp.data;\n}","import api from './api-config';\n\nexport const getAllCharacters = async () => {\n  const resp = await api.get('/characters');\n  return resp.data;\n}\n\n","import { Link } from \"react-router-dom\";\nimport \"./PostCards.css\";\n\nexport default function PostCards(props) {\n  const {\n    posts,\n    handleDelete,\n    currentUser,\n    handleUpvote,\n    handleDownvote,\n    voted,\n    setSortType,\n  } = props;\n\n  return (\n    <div>\n      <div className=\"selection\">\n        <select onChange={(e) => setSortType(e.target.value)}>\n          <option value=\"date\">Date - newest</option>\n          <option value=\"score\">Score - highest</option>\n        </select>\n      </div>\n\n      {posts.map((post) => (\n        <div className=\"post\" key={post.id}>\n          <img\n            src={post.character.img_url}\n            alt=\"character\"\n            className=\"character-image\"\n          />\n\n          {currentUser !== null && (\n            <>\n              <button\n                className={\n                  voted.includes(post.id) ? \"upvoted\" : \"post-upvote-button\"\n                }\n                disabled={voted.includes(post.id)}\n                onClick={() => handleUpvote(post.id)}\n              >\n                ⇧\n              </button>\n            </>\n          )}\n          \n\n          {currentUser !== null && (\n            <>\n              <div className=\"post-score\">{post.score}</div>\n              <button\n                className={\n                  voted.includes(post.id) ? \"downvoted\" : \"post-downvote-button\"\n                }\n                disabled={voted.includes(post.id)}\n                onClick={() => handleDownvote(post.id, post.score)}\n              >\n                ⇩{\" \"}\n              </button>\n            </>\n          )}\n\n          <div className=\"post-text\">\n            <div className=\"post-content\">{post.content}</div>\n            <div className=\"post-credits\">\n              {post.character.name} aka {post.user.name}\n            </div>\n          </div>\n          <div className=\"user-controls\">\n            {currentUser?.id === post.user_id && (\n              <>\n                <Link to={`/posts/edit/${post.id}`}>\n                  <button className=\"post-edit-button\">🖊</button>\n                </Link>\n                <button\n                  className=\"post-delete-button\"\n                  onClick={() => handleDelete(post.id)}\n                >\n                  ❌\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      ))}\n      <div className=\"bottom-border\" />\n    </div>\n  );\n}\n","import PostCards from \"../components/PostCards\";\nimport \"./Posts.css\";\n\nexport default function Posts(props) {\n  const {\n    posts,\n    handleDelete,\n    currentUser,\n    handleUpvote,\n    handleDownvote,\n    setSortType,\n    voted,\n  } = props;\n\n  return (\n    <div>\n      <div className=\"posts-feed\">\n        <PostCards\n          posts={posts}\n          handleDelete={handleDelete}\n          currentUser={currentUser}\n          handleUpvote={handleUpvote}\n          handleDownvote={handleDownvote}\n          voted={voted}\n          setSortType={setSortType}\n        />\n      </div>\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport \"./PostCreate.css\";\n\nexport default function PostCreate(props) {\n  const { handleCreate, characters } = props;\n\n  const [formData, setFormData] = useState({\n    content: \"\",\n    character_id: \"\",\n  });\n\n  const { content, character_id } = formData;\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className=\"post-creation-container\">\n      <div>\n        <form\n          className=\"post-creation\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleCreate(formData, character_id);\n          }}\n        >\n          <textarea\n            maxLength=\"180\"\n            placeholder=\"Max length - 180 characters.\"\n            className=\"text-field\"\n            name=\"content\"\n            value={content}\n            onChange={handleChange}\n          />\n          <div>\n            <select\n              onChange={handleChange}\n              defaultValue=\"default\"\n              name={\"character_id\"}\n            >\n              <option value=\"default\" disabled>\n                -- Select a character --\n              </option>\n              {characters.map((character) => (\n                <option value={character.id} key={character.id}>\n                  {character.name}\n                </option>\n              ))}\n            </select>\n\n            <button className=\"submit-button\">Submit</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"./PostCreate.css\";\n\nexport default function PostEdit(props) {\n  const [formData, setFormData] = useState({\n    content: \"\",\n  });\n  const { content } = formData;\n  const { id } = useParams();\n  const { posts, handleUpdate } = props;\n\n  useEffect(() => {\n    const prefillFormData = () => {\n      const postCard = posts.find((post) => post.id === Number(id));\n      setFormData({\n        content: postCard.content,\n      });\n    };\n    if (posts.length) {\n      prefillFormData();\n    }\n  }, [posts, id]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  return (\n    <div className=\"post-creation-container\">\n      <form\n        className=\"post-creation\"\n        onSubmit={(e) => {\n          e.preventDefault();\n          handleUpdate(id, formData);\n        }}\n      >\n        <label>\n          <textarea\n            maxLength=\"180\"\n            className=\"text-field\"\n            name=\"content\"\n            value={content}\n            onChange={handleChange}\n          />\n        </label>\n        <button className=\"submit-button\">Submit</button>\n      </form>\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\nimport {\n  getAllPosts,\n  postPost,\n  destroyPost,\n  putPost,\n  upvotePost,\n  downvotePost,\n} from \"../services/posts\";\nimport { getAllCharacters } from \"../services/characters\";\n\nimport Posts from \"../screens/Posts\";\nimport PostCreate from \"../screens/PostCreate\";\nimport PostEdit from \"../screens/PostEdit\";\n\nexport default function MainContainer(props) {\n  const [posts, setPosts] = useState([]);\n  const [characters, setCharacters] = useState([]);\n  const [sortType, setSortType] = useState(\"date\");\n  const [voted, setVoted] = useState([]);\n\n  const history = useHistory();\n  const { currentUser } = props;\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const posts = await getAllPosts();\n      setPosts(posts);\n    };\n    fetchPosts();\n  }, []);\n\n  //sorting\n  useEffect(() => {\n    const sortArray = (type) => {\n      const types = {\n        date: \"id\",\n        score: \"score\",\n      };\n      const sortProperty = types[type];\n      const sorted = [...posts].sort(\n        (a, b) => b[sortProperty] - a[sortProperty]\n      );\n      setPosts(sorted);\n    };\n    sortArray(sortType);\n  }, [sortType]);\n\n  useEffect(() => {\n    const fetchCharacters = async () => {\n      const characters = await getAllCharacters();\n      setCharacters(characters);\n    };\n    fetchCharacters();\n  }, []);\n\n  const handleCreate = async (postData, charID) => {\n    const newPost = await postPost(postData, charID);\n    setPosts((prevState) => [newPost, ...prevState]);\n    history.push(\"/\");\n  };\n\n  const handleDelete = async (id) => {\n    await destroyPost(id);\n    setPosts((prevState) => prevState.filter((post) => post.id !== id));\n  };\n\n  const handleUpdate = async (id, postData) => {\n    const updatedPost = await putPost(id, postData);\n    setPosts((prevState) =>\n      prevState.map((post) => {\n        return post.id === Number(id) ? updatedPost : post;\n      })\n    );\n    history.push(\"/\");\n  };\n\n  //upvotes and downvotes\n  const handleUpvote = async (id) => {\n    const updatedPost = await upvotePost(id);\n    setPosts((prevState) =>\n      prevState.map((post) => {\n        return post.id === Number(id) ? updatedPost : post;\n      })\n    );\n    setVoted((prevState) => [...prevState, id]);\n    \n  };\n\n  const handleDownvote = async (id, score) => {\n    if (score < -10) {\n      await handleDelete(id);\n      setPosts((prevState) =>\n        prevState.filter((post) => {\n          return post.id !== Number(id);\n        })\n      );\n    } else {\n      const updatedPost = await downvotePost(id);\n      setPosts((prevState) =>\n        prevState.map((post) => {\n          return post.id === Number(id) ? updatedPost : post;\n        })\n      );\n      setVoted((prevState) => [...prevState, id]);\n    }\n  };\n\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Posts\n          posts={posts}\n          currentUser={currentUser}\n          handleDelete={handleDelete}\n          handleUpvote={handleUpvote}\n          handleDownvote={handleDownvote}\n          setSortType={setSortType}\n          voted={voted}\n        />\n      </Route>\n      <Route path=\"/posts/new\">\n        <PostCreate handleCreate={handleCreate} characters={characters} />\n      </Route>\n      <Route path=\"/posts/edit/:id\">\n        <PostEdit\n          posts={posts}\n          handleUpdate={handleUpdate}\n          characters={characters}\n        />\n      </Route>\n    </Switch>\n  );\n}\n","import api from './api-config';\n\nexport const loginUser = async (loginData) => {\n  const resp = await api.post('/auth/login', { authentication: loginData })\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n  return resp.data.user\n}\n\nexport const registerUser = async (registerData) => {\n  const resp = await api.post('/users/', { user: registerData })\n  localStorage.setItem('authToken', resp.data.token);\n  api.defaults.headers.common.authorization = `Bearer ${resp.data.token}`\n  return resp.data.user\n}\n\nexport const verifyUser = async () => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    api.defaults.headers.common.authorization = `Bearer ${token}`\n    const resp = await api.get('/auth/verify');\n    return resp.data\n  }\n  return null\n}\n\nexport const removeToken = () => {\n  api.defaults.headers.common.authorization = null\n}","import './App.css';\n\nimport { useState, useEffect } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\n\nimport Layout from './layouts/Layout';\nimport Login from './screens/Login';\nimport Register from './screens/Register';\n\nimport MainContainer from './containers/MainContainer';\n\nimport { loginUser, registerUser, removeToken, verifyUser } from './services/auth';\n\nfunction App() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory()\n\n  useEffect(() => {\n    const handleVerify = async () => {\n      const userData = await verifyUser();\n      setCurrentUser(userData);\n    }\n    handleVerify();\n  }, [])\n\n  const handleLogin = async (formData) => {\n    const userData = await loginUser(formData);\n    setCurrentUser(userData);\n    history.push('/');\n  }\n\n  const handleRegister = async (formData) => {\n    const userData = await registerUser(formData);\n    setCurrentUser(userData);\n    history.push('/');\n  }\n\n  const handleLogout = () => {\n    setCurrentUser(null);\n    localStorage.removeItem('authToken');\n    removeToken();\n  }\n\n  return (\n    <div className=\"App\">\n      <Layout\n        currentUser={currentUser}\n        handleLogout={handleLogout}\n      >\n        <Switch>\n          <Route path='/login'>\n            <Login\n              handleLogin={handleLogin}\n            />\n          </Route>\n          <Route path='/register'>\n            <Register\n              handleRegister={handleRegister}\n            />\n          </Route>\n          <Route path='/'>\n            <MainContainer\n              currentUser={currentUser}\n            />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}